# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import remote_pb2 as remote__pb2


class EnvironmentStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Initialize = channel.unary_unary(
                '/Environment/Initialize',
                request_serializer=remote__pb2.Attributes.SerializeToString,
                response_deserializer=remote__pb2.Empty.FromString,
                )
        self.Start = channel.unary_unary(
                '/Environment/Start',
                request_serializer=remote__pb2.Empty.SerializeToString,
                response_deserializer=remote__pb2.State.FromString,
                )
        self.Step = channel.unary_unary(
                '/Environment/Step',
                request_serializer=remote__pb2.Action.SerializeToString,
                response_deserializer=remote__pb2.StepResult.FromString,
                )
        self.GetAttributes = channel.unary_unary(
                '/Environment/GetAttributes',
                request_serializer=remote__pb2.Empty.SerializeToString,
                response_deserializer=remote__pb2.Attributes.FromString,
                )


class EnvironmentServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Initialize(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Step(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttributes(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Initialize': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialize,
                    request_deserializer=remote__pb2.Attributes.FromString,
                    response_serializer=remote__pb2.Empty.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=remote__pb2.Empty.FromString,
                    response_serializer=remote__pb2.State.SerializeToString,
            ),
            'Step': grpc.unary_unary_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=remote__pb2.Action.FromString,
                    response_serializer=remote__pb2.StepResult.SerializeToString,
            ),
            'GetAttributes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttributes,
                    request_deserializer=remote__pb2.Empty.FromString,
                    response_serializer=remote__pb2.Attributes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Environment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Environment(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Initialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment/Initialize',
            remote__pb2.Attributes.SerializeToString,
            remote__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment/Start',
            remote__pb2.Empty.SerializeToString,
            remote__pb2.State.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment/Step',
            remote__pb2.Action.SerializeToString,
            remote__pb2.StepResult.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAttributes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Environment/GetAttributes',
            remote__pb2.Empty.SerializeToString,
            remote__pb2.Attributes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class AgentStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Initialize = channel.unary_unary(
                '/Agent/Initialize',
                request_serializer=remote__pb2.AgentAttributes.SerializeToString,
                response_deserializer=remote__pb2.Empty.FromString,
                )
        self.Start = channel.unary_unary(
                '/Agent/Start',
                request_serializer=remote__pb2.State.SerializeToString,
                response_deserializer=remote__pb2.Action.FromString,
                )
        self.Step = channel.unary_unary(
                '/Agent/Step',
                request_serializer=remote__pb2.StepResult.SerializeToString,
                response_deserializer=remote__pb2.Action.FromString,
                )


class AgentServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Initialize(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Step(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Initialize': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialize,
                    request_deserializer=remote__pb2.AgentAttributes.FromString,
                    response_serializer=remote__pb2.Empty.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=remote__pb2.State.FromString,
                    response_serializer=remote__pb2.Action.SerializeToString,
            ),
            'Step': grpc.unary_unary_rpc_method_handler(
                    servicer.Step,
                    request_deserializer=remote__pb2.StepResult.FromString,
                    response_serializer=remote__pb2.Action.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Agent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Agent(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Initialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Agent/Initialize',
            remote__pb2.AgentAttributes.SerializeToString,
            remote__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Agent/Start',
            remote__pb2.State.SerializeToString,
            remote__pb2.Action.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Step(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Agent/Step',
            remote__pb2.StepResult.SerializeToString,
            remote__pb2.Action.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
