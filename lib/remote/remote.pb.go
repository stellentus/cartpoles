// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remote.proto

package remote

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Attributes struct {
	Attributes           string   `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Attributes) Reset()         { *m = Attributes{} }
func (m *Attributes) String() string { return proto.CompactTextString(m) }
func (*Attributes) ProtoMessage()    {}
func (*Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{0}
}

func (m *Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attributes.Unmarshal(m, b)
}
func (m *Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attributes.Marshal(b, m, deterministic)
}
func (m *Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attributes.Merge(m, src)
}
func (m *Attributes) XXX_Size() int {
	return xxx_messageInfo_Attributes.Size(m)
}
func (m *Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_Attributes proto.InternalMessageInfo

func (m *Attributes) GetAttributes() string {
	if m != nil {
		return m.Attributes
	}
	return ""
}

type AgentAttributes struct {
	Experiment           *Attributes `protobuf:"bytes,1,opt,name=experiment,proto3" json:"experiment,omitempty"`
	Environment          *Attributes `protobuf:"bytes,2,opt,name=environment,proto3" json:"environment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AgentAttributes) Reset()         { *m = AgentAttributes{} }
func (m *AgentAttributes) String() string { return proto.CompactTextString(m) }
func (*AgentAttributes) ProtoMessage()    {}
func (*AgentAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{1}
}

func (m *AgentAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentAttributes.Unmarshal(m, b)
}
func (m *AgentAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentAttributes.Marshal(b, m, deterministic)
}
func (m *AgentAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentAttributes.Merge(m, src)
}
func (m *AgentAttributes) XXX_Size() int {
	return xxx_messageInfo_AgentAttributes.Size(m)
}
func (m *AgentAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_AgentAttributes proto.InternalMessageInfo

func (m *AgentAttributes) GetExperiment() *Attributes {
	if m != nil {
		return m.Experiment
	}
	return nil
}

func (m *AgentAttributes) GetEnvironment() *Attributes {
	if m != nil {
		return m.Environment
	}
	return nil
}

type State struct {
	Values               []float64 `protobuf:"fixed64,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{2}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetValues() []float64 {
	if m != nil {
		return m.Values
	}
	return nil
}

type Action struct {
	Action               uint64   `protobuf:"fixed64,1,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{3}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetAction() uint64 {
	if m != nil {
		return m.Action
	}
	return 0
}

type StepResult struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Reward               float64  `protobuf:"fixed64,2,opt,name=reward,proto3" json:"reward,omitempty"`
	Terminal             bool     `protobuf:"varint,3,opt,name=terminal,proto3" json:"terminal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepResult) Reset()         { *m = StepResult{} }
func (m *StepResult) String() string { return proto.CompactTextString(m) }
func (*StepResult) ProtoMessage()    {}
func (*StepResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{4}
}

func (m *StepResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepResult.Unmarshal(m, b)
}
func (m *StepResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepResult.Marshal(b, m, deterministic)
}
func (m *StepResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepResult.Merge(m, src)
}
func (m *StepResult) XXX_Size() int {
	return xxx_messageInfo_StepResult.Size(m)
}
func (m *StepResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StepResult.DiscardUnknown(m)
}

var xxx_messageInfo_StepResult proto.InternalMessageInfo

func (m *StepResult) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *StepResult) GetReward() float64 {
	if m != nil {
		return m.Reward
	}
	return 0
}

func (m *StepResult) GetTerminal() bool {
	if m != nil {
		return m.Terminal
	}
	return false
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{5}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Attributes)(nil), "Attributes")
	proto.RegisterType((*AgentAttributes)(nil), "AgentAttributes")
	proto.RegisterType((*State)(nil), "State")
	proto.RegisterType((*Action)(nil), "Action")
	proto.RegisterType((*StepResult)(nil), "StepResult")
	proto.RegisterType((*Empty)(nil), "Empty")
}

func init() { proto.RegisterFile("remote.proto", fileDescriptor_eefc82927d57d89b) }

var fileDescriptor_eefc82927d57d89b = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x93, 0xdb, 0x9b, 0xb4, 0xf7, 0xe4, 0x8a, 0x72, 0x16, 0x52, 0x83, 0xd4, 0x32, 0x82,
	0x04, 0xd4, 0x59, 0xd4, 0x27, 0xe8, 0xa2, 0x88, 0xdb, 0xe9, 0x5e, 0x98, 0xea, 0x41, 0x06, 0x92,
	0x49, 0x98, 0x9e, 0xd6, 0x3f, 0xef, 0xe1, 0xfb, 0x4a, 0xa6, 0x69, 0x33, 0xea, 0x2e, 0xdf, 0xf9,
	0xf3, 0xe5, 0xf7, 0x71, 0x06, 0xfe, 0x3b, 0xaa, 0x6a, 0x26, 0xd9, 0xb8, 0x9a, 0x6b, 0x71, 0x03,
	0x30, 0x67, 0x76, 0x66, 0xb5, 0x61, 0x5a, 0xe3, 0x04, 0x40, 0x1f, 0xd4, 0x38, 0x9e, 0xc6, 0xc5,
	0x3f, 0x15, 0x54, 0x44, 0x05, 0xc7, 0xf3, 0x17, 0xb2, 0x1c, 0xac, 0x5c, 0x03, 0xd0, 0x5b, 0x43,
	0xce, 0x54, 0x64, 0xd9, 0xaf, 0x64, 0xb3, 0x4c, 0xf6, 0x03, 0x2a, 0x68, 0xe3, 0x2d, 0x64, 0x64,
	0xb7, 0xc6, 0xd5, 0xd6, 0x4f, 0xff, 0xf9, 0x3d, 0x1d, 0xf6, 0xc5, 0x05, 0x24, 0x4b, 0xd6, 0x4c,
	0x78, 0x0a, 0xe9, 0x56, 0x97, 0x1b, 0xcf, 0x34, 0x28, 0x62, 0xd5, 0x29, 0x31, 0x85, 0x74, 0xfe,
	0xc4, 0xa6, 0xb6, 0xed, 0x84, 0xf6, 0x5f, 0x1e, 0x21, 0x55, 0x9d, 0x12, 0x8f, 0x00, 0x4b, 0xa6,
	0x46, 0xd1, 0x7a, 0x53, 0x32, 0x9e, 0x43, 0xb2, 0x6e, 0x0d, 0x3b, 0xce, 0x54, 0x7a, 0x7b, 0xb5,
	0x2b, 0xb6, 0x1e, 0x8e, 0x5e, 0xb5, 0x7b, 0xf6, 0x60, 0xb1, 0xea, 0x14, 0xe6, 0x30, 0x62, 0x72,
	0x95, 0xb1, 0xba, 0x1c, 0x0f, 0xa6, 0x71, 0x31, 0x52, 0x07, 0x2d, 0x86, 0x90, 0x2c, 0xaa, 0x86,
	0xdf, 0x67, 0x9f, 0x31, 0x64, 0x8b, 0x9e, 0x1d, 0x2f, 0x01, 0x1e, 0xac, 0x61, 0xa3, 0x4b, 0xf3,
	0x41, 0x18, 0x66, 0xcc, 0x53, 0xe9, 0x57, 0x44, 0x84, 0x67, 0x3e, 0xa0, 0x63, 0xec, 0x4a, 0x79,
	0x47, 0x24, 0x22, 0x9c, 0xc0, 0xdf, 0x16, 0x1c, 0x87, 0x72, 0x97, 0x30, 0xcf, 0x64, 0x1f, 0x44,
	0x44, 0x78, 0x05, 0x47, 0xf7, 0x14, 0x1e, 0x62, 0x6f, 0x11, 0xfe, 0x4a, 0x44, 0xb3, 0x0a, 0x12,
	0x7f, 0x32, 0x2c, 0xbe, 0x01, 0x9d, 0xc8, 0x1f, 0x87, 0x0c, 0xa8, 0xf2, 0x9e, 0xca, 0xd3, 0xe4,
	0x7b, 0x86, 0x00, 0x2b, 0xa4, 0x09, 0xfa, 0xab, 0xd4, 0x3f, 0xab, 0xbb, 0xaf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xe3, 0xad, 0x73, 0xc0, 0x66, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EnvironmentClient is the client API for Environment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnvironmentClient interface {
	Initialize(ctx context.Context, in *Attributes, opts ...grpc.CallOption) (*Empty, error)
	Start(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*State, error)
	Step(ctx context.Context, in *Action, opts ...grpc.CallOption) (*StepResult, error)
	GetAttributes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Attributes, error)
}

type environmentClient struct {
	cc *grpc.ClientConn
}

func NewEnvironmentClient(cc *grpc.ClientConn) EnvironmentClient {
	return &environmentClient{cc}
}

func (c *environmentClient) Initialize(ctx context.Context, in *Attributes, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Environment/Initialize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentClient) Start(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := c.cc.Invoke(ctx, "/Environment/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentClient) Step(ctx context.Context, in *Action, opts ...grpc.CallOption) (*StepResult, error) {
	out := new(StepResult)
	err := c.cc.Invoke(ctx, "/Environment/Step", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *environmentClient) GetAttributes(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Attributes, error) {
	out := new(Attributes)
	err := c.cc.Invoke(ctx, "/Environment/GetAttributes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvironmentServer is the server API for Environment service.
type EnvironmentServer interface {
	Initialize(context.Context, *Attributes) (*Empty, error)
	Start(context.Context, *Empty) (*State, error)
	Step(context.Context, *Action) (*StepResult, error)
	GetAttributes(context.Context, *Empty) (*Attributes, error)
}

func RegisterEnvironmentServer(s *grpc.Server, srv EnvironmentServer) {
	s.RegisterService(&_Environment_serviceDesc, srv)
}

func _Environment_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Attributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).Initialize(ctx, req.(*Attributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environment_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).Start(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environment_Step_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Action)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).Step(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/Step",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).Step(ctx, req.(*Action))
	}
	return interceptor(ctx, in, info, handler)
}

func _Environment_GetAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvironmentServer).GetAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Environment/GetAttributes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvironmentServer).GetAttributes(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Environment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Environment",
	HandlerType: (*EnvironmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initialize",
			Handler:    _Environment_Initialize_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Environment_Start_Handler,
		},
		{
			MethodName: "Step",
			Handler:    _Environment_Step_Handler,
		},
		{
			MethodName: "GetAttributes",
			Handler:    _Environment_GetAttributes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remote.proto",
}

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	Initialize(ctx context.Context, in *AgentAttributes, opts ...grpc.CallOption) (*Empty, error)
	Start(ctx context.Context, in *State, opts ...grpc.CallOption) (*Action, error)
	Step(ctx context.Context, in *StepResult, opts ...grpc.CallOption) (*Action, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Initialize(ctx context.Context, in *AgentAttributes, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/Agent/Initialize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Start(ctx context.Context, in *State, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := c.cc.Invoke(ctx, "/Agent/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) Step(ctx context.Context, in *StepResult, opts ...grpc.CallOption) (*Action, error) {
	out := new(Action)
	err := c.cc.Invoke(ctx, "/Agent/Step", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	Initialize(context.Context, *AgentAttributes) (*Empty, error)
	Start(context.Context, *State) (*Action, error)
	Step(context.Context, *StepResult) (*Action, error)
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AgentAttributes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Initialize(ctx, req.(*AgentAttributes))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(State)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Start(ctx, req.(*State))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_Step_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StepResult)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Step(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Agent/Step",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Step(ctx, req.(*StepResult))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Initialize",
			Handler:    _Agent_Initialize_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Agent_Start_Handler,
		},
		{
			MethodName: "Step",
			Handler:    _Agent_Step_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remote.proto",
}
